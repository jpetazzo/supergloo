// Code generated by solo-kit. DO NOT EDIT.

package v1

import (
	"fmt"

	"github.com/solo-io/solo-kit/pkg/utils/hashutils"
	"go.uber.org/zap"
)

type InstallSnapshot struct {
	Installs InstallsByNamespace
}

func (s InstallSnapshot) Clone() InstallSnapshot {
	return InstallSnapshot{
		Installs: s.Installs.Clone(),
	}
}

func (s InstallSnapshot) Hash() uint64 {
	return hashutils.HashAll(
		s.hashInstalls(),
	)
}

func (s InstallSnapshot) hashInstalls() uint64 {
	return hashutils.HashAll(s.Installs.List().AsInterfaces()...)
}

func (s InstallSnapshot) HashFields() []zap.Field {
	var fields []zap.Field
	fields = append(fields, zap.Uint64("installs", s.hashInstalls()))

	return append(fields, zap.Uint64("snapshotHash", s.Hash()))
}

type InstallSnapshotStringer struct {
	Version  uint64
	Installs []string
}

func (ss InstallSnapshotStringer) String() string {
	s := fmt.Sprintf("InstallSnapshot %v\n", ss.Version)

	s += fmt.Sprintf("  Installs %v\n", len(ss.Installs))
	for _, name := range ss.Installs {
		s += fmt.Sprintf("    %v\n", name)
	}

	return s
}

func (s InstallSnapshot) Stringer() InstallSnapshotStringer {
	return InstallSnapshotStringer{
		Version:  s.Hash(),
		Installs: s.Installs.List().NamespacesDotNames(),
	}
}
